# Generated by Django 5.2.1 on 2025-05-31 11:27

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+999999999'. Допускается до 15 цифр.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField()),
                ('slug', models.SlugField(editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('credentials', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('login', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Логин может содержать только буквы, цифры и подчеркивания', regex='^[a-zA-Z0-9_]+$')])),
                ('phone', models.CharField(max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('paid', 'Оплачено'), ('completed', 'Завершено'), ('no_show', 'Клиент не явился'), ('waiting', 'Ожидание оплаты'), ('paid_back', 'Возврат средств'), ('moved', 'Перенесено'), ('declined', 'Отклонено')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='', max_length=120, unique=True)),
                ('date_to', models.DateTimeField(editable=False)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
                ('media_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.socialmediatype')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('img_preview_url', models.URLField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('short_description', models.CharField(max_length=120)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.country')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tour')),
            ],
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tour')),
            ],
        ),
        migrations.CreateModel(
            name='TourInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('img_url', models.URLField()),
                ('img_background_url', models.URLField()),
                ('placed', models.TextField()),
                ('tour', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.tour')),
            ],
        ),
        migrations.CreateModel(
            name='TourTimeSpan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('place_count', models.IntegerField()),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tour')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.reservationstatus')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tourtimespan')),
            ],
        ),
    ]
